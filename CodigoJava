package interpret;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;

public class Interpret {

    static String PC;//proxima linha
    static String instr_type;//tipo da instrução para analise
    static String data;//instrução completa de 32bits
    static String registadorDestino_01111 = null;//R1(a)
    static String registadorDestino_01110 = null;//R2(b)
    static String registadorDestino_01100 = null;//registrador da soma/sub
    static String registadorDestino;//Register destino(c)
    static int qtBits;
    static int soma;
    public static void main(String[] args) throws IOException {
        abreArquivo();
    }

    static void escreveArquivo(int soma ) throws IOException {
        //Memoria de dados
        OutputStream os = new FileOutputStream("C:\\MemoriaDeDados.txt", true);
        OutputStreamWriter osw = new OutputStreamWriter(os);
        BufferedWriter bw = new BufferedWriter(osw);
        
        //Memoria cache
        OutputStream os2 = new FileOutputStream("C:\\MemoriaCache.txt", true);
        OutputStreamWriter osw2 = new OutputStreamWriter(os2);
        BufferedWriter bw2 = new BufferedWriter(osw2);
        
        bw.write("0000000000000000000000000000"+Integer.toBinaryString(soma));//fixado para testes...
        bw.newLine();
        bw.close();
    }

    static void abreArquivo() throws IOException {
        //lendo o arquivo de programa
        InputStream is = new FileInputStream("C:\\MemoriaDePrograma.txt");
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr);
        
        //lendo o arquivo de dados
        InputStream is2 = new FileInputStream("C:\\MemoriaDeDados.txt");
        InputStreamReader isr2 = new InputStreamReader(is2);
        BufferedReader br2 = new BufferedReader(isr2);
        
        //lendo o arquivo de cache
        InputStream is3 = new FileInputStream("C:\\MemoriaCache.txt");
        InputStreamReader isr3 = new InputStreamReader(is3);
        BufferedReader br3 = new BufferedReader(isr3);
        
       
        data = br.readLine();//leitura da operação na memoria de programa no arquivo
        PC = br.readLine();//PC = data + 1;
        System.out.println("Configuração do Sistema: "+data.length()+" bits");
        
        while(data != null){
            try{
                instr_type = data.substring(0,11);//Tipo de operação ( Load, Store, add)
                analisaIntrucao(instr_type,data,br2);
                data = PC;
                PC = br.readLine();//PC = data + 1;
            }catch(NullPointerException e){
                System.out.println("Não encontramos mais linha de programa!");
            }
        }
    }

    private static void analisaIntrucao(String instr_type, String data, BufferedReader br2) throws IOException {
        switch(instr_type){
            case "00001110101"://load
                System.out.println("LOAD");
                registadorDestino = data.substring(11,16);//Registrador onde será destinado A
                
                if(registadorDestino.contains("01111")){
                    registadorDestino_01111  = br2.readLine();//leitura da memoria de dados no arquivo(variavel A)
                    System.out.println("Variável A (binario): "+registadorDestino_01111);
                    System.out.println("Variável A (decimal): "+Integer.parseInt(registadorDestino_01111,2));
                
            }else if(registadorDestino.contains("01110")){//Registrador onde será destinado B
                    registadorDestino_01110  = br2.readLine();//leitura da memoria de dados no arquivo(variavel B)
                    System.out.println("Variável B (binario): "+registadorDestino_01110);
                    System.out.println("Variável B (decimal): "+Integer.parseInt(registadorDestino_01110,2));
                
                }
            break;
            
            case "10110101101"://add
                System.out.println("ADD");
                registadorDestino = data.substring(11,22);//Registrador onde será guardado a operação C=A+B
            if(registadorDestino.contains("1011001101")){
                soma = Integer.parseInt(registadorDestino_01111/*A*/,2) + Integer.parseInt(registadorDestino_01110/*B*/,2);
                System.out.println("Variável Soma (binario): "+Integer.toBinaryString(soma));
                System.out.println("Variável Soma (decimal): "+soma);
               
                qtBits = 32 - Integer.toBinaryString(soma).length();
                
                System.out.println("Qt de bits 0 a esquerda: "+qtBits);
                
            }
                
            break;
            
            case "00011111010"://store
                System.out.println("STORE");
                escreveArquivo(soma);
            break;
        }
    
    }
}
